
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекПолеСтрока = 2;
	ТекПолеКолонка = 5;
	ТекНаправлениеФигуры = 1;
	ТекНомерФигуры = 5;
	Поле7.Область("R1C1:R20C10").ШиринаКолонки = 2.5;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЛево(Команда)
	Если НЕ ПроверитьКоллизию(3) Тогда
		ТекПолеКолонка = ТекПолеКолонка - 1;
		НарисоватьФигуру(ТекНомерФигуры);
		ПодключитьОбработчикОжидания("ОболочкаОбработчика", 1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПраво(Команда)
	Если НЕ ПроверитьКоллизию(1) Тогда
		ТекПолеКолонка = ТекПолеКолонка + 1;
		НарисоватьФигуру(ТекНомерФигуры);
		ПодключитьОбработчикОжидания("ОболочкаОбработчика", 1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	ТекНомерФигуры = 1;
	НарисоватьФигуру(1);
КонецПроцедуры

&НаКлиенте
Процедура Команда2(Команда)
	ТекНомерФигуры = 2;
	НарисоватьФигуру(2);
КонецПроцедуры

&НаКлиенте
Процедура Команда3(Команда)
	ТекНомерФигуры = 3;
	НарисоватьФигуру(3);
КонецПроцедуры

&НаКлиенте
Процедура Команда4(Команда)
	ТекНомерФигуры = 4;
	НарисоватьФигуру(4);
КонецПроцедуры

&НаКлиенте
Процедура Команда5(Команда)
	ТекНомерФигуры = 5;
	НарисоватьФигуру(5);
КонецПроцедуры

&НаКлиенте
Процедура Команда6(Команда)
	ТекНомерФигуры = 6;
	НарисоватьФигуру(6);
КонецПроцедуры

&НаКлиенте
Процедура Команда7(Команда)
	ТекНомерФигуры = 7;
	НарисоватьФигуру(7);
КонецПроцедуры

&НаКлиенте
Процедура КомандаПовернуть(Команда)
	
	ТекНаправлениеФигуры = ТекНаправлениеФигуры + 1;
	Если ТекНаправлениеФигуры = 5 Тогда
		ТекНаправлениеФигуры = 1;
	КонецЕсли;
	
	НарисоватьФигуру(ТекНомерФигуры);
	ПодключитьОбработчикОжидания("ОболочкаОбработчика", 1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НарисоватьФигуру(НомерФигуры, НоваяФигура = Ложь)
	
	Для Каждого СохрПоле ИЗ ПоляФигуры Цикл
		Поле7.Область(СохрПоле.Значение).ЦветФона = Новый Цвет();
		Если НоваяФигура Тогда
			НоваяСохрКоордината = СохраненныеФигуры.Добавить();
			НоваяСохрКоордината.Координата = СохрПоле.Значение;
			НоваяСохрКоордината.Фигура = ТекНомерФигуры;
		КонецЕсли;
	КонецЦикла;
	ПоляФигуры.Очистить();	
	
	Если НоваяФигура Тогда
		ТекПолеСтрока = 2;
		ТекПолеКолонка = 5;
		ТекНаправлениеФигуры = 1;
		ГСЧ1 = Новый ГенераторСлучайныхЧисел();
		ТекНомерФигуры = ГСЧ1.СлучайноеЧисло(1, 7);
	КонецЕсли;
	
	МассивКоординат = ПолучитьПоляДляФигуры(ТекНомерФигуры, ТекНаправлениеФигуры);
	ШаблонПоля = "R%1C%2";
	СамаяНизкаяКоордината = 0;
	Для Каждого Координаты ИЗ МассивКоординат Цикл
		ТекКоординаты = СтрШаблон(ШаблонПоля,
									ТекПолеСтрока + Координаты.R,
									ТекПолеКолонка + Координаты.C);
		ПоляФигуры.Добавить(ТекКоординаты);
		СамаяНизкаяКоордината = Макс(СамаяНизкаяКоордината, ТекПолеСтрока + Координаты.R);
	КонецЦикла;
	
	Для Каждого СохрПоле ИЗ ПоляФигуры Цикл
		Поле7.Область(СохрПоле.Значение).ЦветФона = ПолучитьЦветФигуры(ТекНомерФигуры);
	КонецЦикла;
	
	Для Каждого СтрокаТЗ ИЗ СохраненныеФигуры Цикл
		Поле7.Область(СтрокаТЗ.Координата).ЦветФона = ПолучитьЦветФигуры(СтрокаТЗ.Фигура);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЦветФигуры(НомерФигуры)
	
	ПолученныйЦвет = Новый Цвет(0,0,0);
	
	Если НомерФигуры = 1 Тогда
		ПолученныйЦвет = Новый Цвет(240,240,79);
	ИначеЕсли НомерФигуры = 2 Тогда
		ПолученныйЦвет = Новый Цвет(110,236,238);
	ИначеЕсли НомерФигуры = 3 Тогда
		ПолученныйЦвет = Новый Цвет(0,0,230);
	ИначеЕсли НомерФигуры = 4 Тогда
		ПолученныйЦвет = Новый Цвет(228,163,57);
	ИначеЕсли НомерФигуры = 5 Тогда
		ПолученныйЦвет = Новый Цвет(146,28,231);
	ИначеЕсли НомерФигуры = 6 Тогда
		ПолученныйЦвет = Новый Цвет(110,236,71);
	ИначеЕсли НомерФигуры = 7 Тогда
		ПолученныйЦвет = Новый Цвет(220,47,33);
	КонецЕсли;
	
	Возврат ПолученныйЦвет;
	
КонецФункции

&НаКлиенте
Функция ПолучитьПоляДляФигуры(НомерФигуры, Направление)
	
	МассивКоординат = Новый Массив;
	
	Если НомерФигуры = 1 Тогда
		
		// [][]
		// [][]
		
		МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));		
		МассивКоординат.Добавить(Новый Структура("R, C", 0, 1));
		МассивКоординат.Добавить(Новый Структура("R, C", 1, 0));
		МассивКоординат.Добавить(Новый Структура("R, C", 1, 1));
		
	ИначеЕсли НомерФигуры = 2 Тогда
		
		Если Направление = 2 ИЛИ Направление = 4 Тогда
			
			// [][][][]
			
			МассивКоординат.Добавить(Новый Структура("R, C", 0, -1));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 1));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 2));
			
		Иначе
			
			// []
			// []
			// []
			// []
			
			МассивКоординат.Добавить(Новый Структура("R, C", -1, 0));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 2, 0));
			
		КонецЕсли;
		
	ИначеЕсли НомерФигуры = 3 Тогда
		
		Если Направление = 1 Тогда
			
			//   []
			//   []
			// [][]
			
			МассивКоординат.Добавить(Новый Структура("R, C", -1, 0));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, -1));
			
		ИначеЕсли Направление = 2 Тогда
			
			// []
			// [][][]
			
			МассивКоординат.Добавить(Новый Структура("R, C", 0, -1));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", -1, -1));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 1));
			
		ИначеЕсли Направление = 3 Тогда
			
			// [][]
			// []
			// []
			
			МассивКоординат.Добавить(Новый Структура("R, C", -1, 0));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", -1, 1));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 0));
			
		ИначеЕсли Направление = 4 Тогда
			
			// [][][]
			//     []
			
			МассивКоординат.Добавить(Новый Структура("R, C", 0, -1));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 1));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 1));
			
		КонецЕсли;
		
	ИначеЕсли НомерФигуры = 4 Тогда
		
		Если Направление = 1 Тогда
			
			// []
			// []
			// [][]
			
			МассивКоординат.Добавить(Новый Структура("R, C", -1, 0));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 1));
			
		ИначеЕсли Направление = 2 Тогда
			
			// [][][]
			// []
			
			МассивКоординат.Добавить(Новый Структура("R, C", 0, -1));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, -1));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 1));
			
		ИначеЕсли Направление = 3 Тогда
			
			// [][]
			//   []
			//   []
			
			МассивКоординат.Добавить(Новый Структура("R, C", -1, -1));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", -1, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 0));
			
		ИначеЕсли Направление = 4 Тогда
			
			//     []
			// [][][]
			
			МассивКоординат.Добавить(Новый Структура("R, C", 0, -1));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 1));
			МассивКоординат.Добавить(Новый Структура("R, C", -1, 1));
			
		КонецЕсли;
		
		
	ИначеЕсли НомерФигуры = 5 Тогда
		
		Если Направление = 1 Тогда
			
			// [][][]
			//   []
			
			МассивКоординат.Добавить(Новый Структура("R, C", 0, -1));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 1));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 0));
			
		ИначеЕсли Направление = 2 Тогда
			
			//   []
			// [][]
			//   []
			
			МассивКоординат.Добавить(Новый Структура("R, C", -1, 0));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, -1));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 0));
			
		ИначеЕсли Направление = 3 Тогда
			
			//   []
			// [][][]
			
			МассивКоординат.Добавить(Новый Структура("R, C", -1, 0));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, -1));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 1));
			
		ИначеЕсли Направление = 4 Тогда
			
			// []
			// [][]
			// []
			
			МассивКоординат.Добавить(Новый Структура("R, C", -1, 0));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 1));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 0));
			
		КонецЕсли;
		
	ИначеЕсли НомерФигуры = 6 Тогда
		
		Если Направление = 1 ИЛИ Направление = 3 Тогда
			
			//   [][]
			// [][]
			
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 1));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, -1));
			
		ИначеЕсли Направление = 2 ИЛИ Направление = 4 Тогда
			
			// []
			// [][]
			//   []
			
			МассивКоординат.Добавить(Новый Структура("R, C", -1, -1));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, -1));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 0));
			
		КонецЕсли;
		
	ИначеЕсли НомерФигуры = 7 Тогда
		
		Если Направление = 1 ИЛИ Направление = 3 Тогда
			
			// [][]
			//   [][]
			
			МассивКоординат.Добавить(Новый Структура("R, C", -1, -1));		
			МассивКоординат.Добавить(Новый Структура("R, C", -1, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 1));
			
		ИначеЕсли Направление = 2 ИЛИ Направление = 4 Тогда
			
			//   []
			// [][]
			// []
			
			МассивКоординат.Добавить(Новый Структура("R, C", -1, 1));		
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 1));
			МассивКоординат.Добавить(Новый Структура("R, C", 0, 0));
			МассивКоординат.Добавить(Новый Структура("R, C", 1, 0));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат МассивКоординат;
	
КонецФункции

&НаКлиенте
Процедура ОболочкаОбработчика()
	
	ТекПолеСтрока = ТекПолеСтрока + 1;
	
	Если СамаяНизкаяКоордината >= 20
		ИЛИ ПроверитьКоллизию(2) Тогда
		ТекПолеСтрока = 1;
		НарисоватьФигуру(ТекНомерФигуры, Истина);	
	Иначе
		НарисоватьФигуру(ТекНомерФигуры);
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ОболочкаОбработчика", 1, Истина);
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьКоллизию(НаправлениеКоллизии)
	
	Если НаправлениеКоллизии = 1 Тогда
		ПлюсСтрока = 0;
		ПлюсКолонка = 1;
	ИначеЕсли НаправлениеКоллизии = 2 Тогда
		ПлюсСтрока = 1;
		ПлюсКолонка = 0;
	ИначеЕсли НаправлениеКоллизии = 3 Тогда
		ПлюсСтрока = 0;
		ПлюсКолонка = -1;
	КонецЕсли;
	
	ЕстьКоллизия = Ложь;
	
	ШаблонКоординаты = "R%1C%2";
	Для Каждого СтрокаСЗ ИЗ ПоляФигуры Цикл
		
		ТекКоордината = СтрокаСЗ.Значение;
		ТекКоордината = СтрЗаменить(ТекКоордината, "R", "");
		мТекКоордината = СтрРазделить(ТекКоордината, "C");
		
		ТекСтрока = Число(мТекКоордината[0]);
		ТекКолонка = Число(мТекКоордината[1]);
		
		Если ТекКолонка+ПлюсКолонка = 0
			ИЛИ ТекКолонка+ПлюсКолонка = 11 Тогда
			ЕстьКоллизия = Истина;
			Прервать;
		КонецЕсли;
		
		ПолеПроверки = СтрШаблон(ШаблонКоординаты, ТекСтрока+ПлюсСтрока,ТекКолонка+ПлюсКолонка);
		
 		Для Каждого СтрокаТЗ ИЗ СохраненныеФигуры Цикл
			Если СтрокаТЗ.Координата = ПолеПроверки Тогда
				ЕстьКоллизия = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьКоллизия Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;	
	
	Возврат ЕстьКоллизия;
	
КонецФункции

#КонецОбласти
